{"version":3,"sources":["styles/scrollable-menu.module.css","styles/selectable.module.css","components/Translation.jsx","components/TranslationList.jsx","containers/TranslationList.js","actions/index.js","components/FormInput.jsx","components/TranslationForm.jsx","containers/TranslationForm.js","components/FileImport.jsx","utils/translationExtractor.js","containers/TranslationFileInput.js","utils/exportToJson.js","components/ExportButton.jsx","containers/TranslationFileExport.js","components/App.js","serviceWorker.js","reducers/translations.js","reducers/index.js","index.js"],"names":["module","exports","scrollable","selectable","active","Translation","_ref","onClick","i18nKey","editing","react_default","a","createElement","className","classNames","styles","TranslationList","translations","markEditing","map","translation","components_Translation","Object","assign","key","id","connect","state","dispatch","type","FormInput","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","selectedKey","event","traduction","target","value","setState","onChange","locale","rows","cols","React","Component","TranslationForm","objectSpread","handleSubmit","onInputChange","preventDefault","updateTranslation","defineProperty","onSubmit","FormInput_FormInput","fr","en","find","t","_ref2","FileImport","addTranslation","handleFileRead","hash","JSON","parse","result","extractKeysFromJson","keys","flat","e","sub_keys","x","i","length","getValue","split","multiple","accept","Array","from","files","forEach","file","fileReader","FileReader","onloadend","readAsText","jsonFromTranslation","acc","index","ExportButton","jsons","frAcc","enAcc","jsonFromTranslations","_this2","exportToJson","renderLinks","json","filename","concat","href","hrefFromJson","download","encodeURIComponent","stringify","App","TranslationFileInput","TranslationFileExport","containers_TranslationList","containers_TranslationForm","Boolean","window","location","hostname","match","arguments","undefined","action","findIndex","toConsumableArray","combineReducers","store","createStore","rootReducer","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.94644ad0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollable\":\"scrollable-menu_scrollable__290n9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectable\":\"selectable_selectable__1ujXG\",\"active\":\"selectable_active__2l-hj\"};","import React from 'react';\nimport classNames from 'classnames/bind';\nimport styles from '../styles/selectable.module.css';\n\nfunction Translation({ onClick, i18nKey, editing }) {\n  return (\n    <div onClick={onClick} className={classNames(styles.selectable, editing ? styles.active : '')}>\n      <p>{i18nKey}</p>\n    </div>\n  )\n}\n\nexport default Translation\n","import React from 'react'\nimport Translation from './Translation';\nimport styles from '../styles/scrollable-menu.module.css';\n\nconst TranslationList = ({ translations, markEditing }) => (\n  <div className={styles.scrollable}>\n    {translations.map(translation =>\n      <Translation\n        key={translation.id}\n        onClick={ () => markEditing(translation.id) }\n        {...translation}\n      />\n    )}\n  </div>\n)\n\nexport default TranslationList\n","import { connect } from 'react-redux'\nimport { markEditing } from '../actions'\nimport TranslationList from '../components/TranslationList'\n\n\nconst getTranslations = (translations, filter) => {\n    return translations\n}\n\nconst mapStateToProps = state => ({\n  translations: getTranslations(state.translations)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  markEditing: id => dispatch(markEditing(id))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TranslationList)\n","export const addTranslation = ({key, fr, en}) => ({\n  type: 'ADD_TRANSLATION',\n  key,\n  fr,\n  en\n})\n\nexport const markEditing = id => ({\n  type: 'MARK_EDITING',\n  id\n})\n\nexport const updateTranslation = ({id, fr, en}) => ({\n  type: 'EDIT_TRANSLATION',\n  id,\n  fr,\n  en\n})\n","import React from 'react';\n\nexport default class FormInput extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      selectedKey: this.props.selectedKey,\n      translation: this.props.translation || ''\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (state.selectedKey !== props.selectedKey) {\n      return {\n        selectedKey: props.selectedKey,\n        translation: props.translation || ''\n      }\n    }\n    return null;\n  }\n\n  handleChange(event) {\n    let traduction = event.target.value\n    this.setState({ translation: traduction })\n    this.props.onChange({ locale: this.props.locale, translation: traduction})\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>{this.props.locale}</h4>\n        <textarea value={this.state.translation} rows=\"4\" cols=\"50\" onChange={this.handleChange}/>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport FormInput from './FormInput';\nimport styles from '../styles/scrollable-menu.module.css';\n\nclass TranslationForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { ...props.translation }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onInputChange = this.onInputChange.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.translation && state.id === props.translation.id) {\n      return null\n    } else {\n      return { ...props.translation }\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    this.props.updateTranslation({...this.props.translation, ...this.state});\n  }\n\n  onInputChange({locale, translation}) {\n    this.setState({[locale]: translation})\n  }\n\n  render() {\n    let { translation } = this.props\n    return (\n      <div className={styles.scrollable}>\n      { translation &&\n        <form onSubmit={this.handleSubmit}>\n          <FormInput\n            locale={'fr'}\n            selectedKey={translation.i18nKey}\n            translation={translation.fr}\n            onChange={this.onInputChange}\n          />\n          <FormInput\n            locale={'en'}\n            selectedKey={translation.i18nKey}\n            translation={translation.en}\n            onChange={this.onInputChange}\n          />\n          <button type=\"submit\"> Save </button>\n        </form>\n        }\n      </div>\n    )\n  }\n}\n\nexport default TranslationForm\n","import { connect } from 'react-redux'\nimport { updateTranslation } from '../actions'\nimport TranslationForm from '../components/TranslationForm'\n\nconst getTranslation = (translations, filter) => {\n  return translations.find(t => t.editing)\n}\n\nconst mapStateToProps = state => ({\n  translation: getTranslation(state.translations)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  updateTranslation: id => dispatch(updateTranslation(id))\n})\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TranslationForm)\n","import React from 'react'\nimport { extractKeysFromJson, getValue } from '../utils/translationExtractor'\n\nconst FileImport = ({ addTranslation }) => {\n  const handleFileRead = (event) => {\n    var hash = JSON.parse(event.target.result).fr\n    var keys_array = extractKeysFromJson(hash)\n    keys_array.map(function(key) {\n      return addTranslation(key, getValue(key.split('.'), hash), null)\n    })\n  }\n\n  const onFileUploaded = (event) => {\n    event.preventDefault()\n    Array.from(event.target.files).forEach(file => {\n      let fileReader = new FileReader()\n      fileReader.onloadend = handleFileRead\n      fileReader.readAsText(file)\n     });\n  }\n\n  return (\n    <input type=\"file\" multiple={true} accept=\".json,application/json\" onChange={e => onFileUploaded(e)}/>\n  )\n}\n\n\nexport default FileImport;\n","function extractKeysFromJson(hash) {\n  return Object.keys(hash).map(function(key) {\n    if (hash[key] && typeof hash[key] == 'object' ) {\n      let x = extractKeysFromJson(hash[key]).flat()\n      return x.flat().map(function(e) { return (key + '.' + e)});\n    } else {\n      return key\n    }\n  }).flat()\n}\n\nfunction getValue(sub_keys, hash) {\n  var x = hash\n  for (var i = 0; i < sub_keys.length; ++i) {\n    x = x[sub_keys[i]]\n  }\n  return x;\n}\n\nexport {\n  extractKeysFromJson,\n  getValue\n}\n","import { connect } from 'react-redux'\nimport { addTranslation } from '../actions'\nimport FileImport from '../components/FileImport'\n\nconst mapDispatchToProps = dispatch => ({\n  addTranslation: (key, fr, en) => dispatch(addTranslation({key, fr, en}))\n})\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(FileImport)\n","function jsonFromTranslations(translations) {\n  let frAcc = {}\n  translations.forEach(translation => {\n    jsonFromTranslation(translation.i18nKey, translation.fr, frAcc)\n  })\n\n  let enAcc = {}\n  translations.forEach(translation => {\n    jsonFromTranslation(translation.i18nKey, translation.en, enAcc)\n  })\n\n  return [{ fr: frAcc }, { en: enAcc }]\n}\n\nfunction jsonFromTranslation(i18nKey, value, acc) {\n  let x = acc\n  let sub_keys = i18nKey.split('.')\n  sub_keys.forEach((key, index) => {\n    if (index === sub_keys.length -1) {\n      x[key] = value\n    } else {\n      if (!x[key]) x[key] = {}\n      x = x[key]\n    }\n  })\n  return acc\n}\n\nexport { jsonFromTranslations }\n","import React from 'react';\nimport { jsonFromTranslations } from '../utils/exportToJson'\n\nclass ExportButton extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { jsons: [] }\n  }\n\n  exportToJson(event) {\n    event.preventDefault()\n    let jsons = jsonFromTranslations(this.props.translations)\n    this.setState({jsons})\n  }\n\n  render () {\n    return (\n      <div>\n        <button onClick={e => this.exportToJson(e)}>Export</button>\n        { this.renderLinks() }\n      </div>\n    )\n  }\n\n  renderLinks() {\n    return this.state.jsons.map(json => {\n      let filename = `${Object.keys(json)[0]}.json`\n      return (\n        [<br/>,\n          <a href={hrefFromJson(json)} key={filename}\n             download={filename}>\n            {filename}\n          </a>\n        ]\n      )\n    })\n  }\n}\n\nexport default ExportButton\n\nfunction hrefFromJson(json) {\n  return `data:application/json;charset=utf-8,${encodeURIComponent(JSON.stringify(json))}`\n}\n","import { connect } from 'react-redux'\nimport ExportButton from '../components/ExportButton'\n\nconst mapStateToProps = state => ({\n  translations: state.translations\n})\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ExportButton)\n","import React from 'react';\nimport './App.css';\nimport TranslationList from '../containers/TranslationList'\nimport TranslationForm from '../containers/TranslationForm'\nimport TranslationFileInput from '../containers/TranslationFileInput'\nimport TranslationFileExport from '../containers/TranslationFileExport'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TranslationFileInput />\n      <TranslationFileExport />\n      <TranslationList />\n      <TranslationForm />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const translations = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TRANSLATION':\n      let index = state.findIndex(translation => ( translation.i18nKey === action.key))\n      if (index !== -1) {\n        return state\n      } else {\n        return [\n          ...state,\n          {\n            id: action.key,\n            i18nKey: action.key,\n            fr: action.fr,\n            en: action.en,\n            editing: false\n          }\n        ]\n      }\n    case 'EDIT_TRANSLATION':\n      return state.map(translation => (\n        translation.id === action.id) ? {...translation, fr: action.fr, en: action.en} : translation\n      )\n    case 'MARK_EDITING':\n      return state.map(translation => (\n        translation.id === action.id) ? {...translation, editing: true} : { ...translation, editing: false }\n      )\n    default:\n      return state\n  }\n}\n\nexport default translations\n\n\n","import { combineReducers } from 'redux'\nimport translations from './translations'\n\nexport default combineReducers({\n  translations\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}